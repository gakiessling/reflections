How did viewing a diff between two versions help you spot the bug?
Diff allowed the differences between the two files to be visualized and the bug was found via inspection of the output.

How could having easy access to the entire history of a file make you a more fficient programmer in the long term?
It would make looking through the history easier and troubleshooting bugs would be faster because you'd be able to quickly see how files changed.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having verions automatically saved, like Google Docs does?
The pros are that you have more control over what gets saved and what your history will look like. The cons are that you might forget to commit at a regular interval and then you could have large amounts of changes that are hard to track.

Why do you think some version control systems, like Git allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
I think Google Docs is intended to be used for managing single files and therfore you don't need to track with multiple files, but Git is a more complete version control systems that can be used for full projects.

How can you use the commands git log and git diff to view the history of a file?
You can use git log to list the commit history, then you can use git diff to see differences between individual commits.

How might using version control make you more confident to make changes that could break something?
I would be more confident in trying changes because I would know they could be easily reverted.

Now that you have your workspace set up, what do you want to try using Git for?
Tracking some changes in code.


